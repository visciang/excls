searchNodes=[{"doc":"Elixir Command Line Shell. A simple framework for writing line-oriented command interpreters.","ref":"ExCLS.html","title":"ExCLS","type":"behaviour"},{"doc":"Autocomplete function. Suggest autocomplete options when a tab key is pressed.","ref":"ExCLS.html#c:autocomplete/3","title":"ExCLS.autocomplete/3","type":"callback"},{"doc":"Command function. Interpret the argument as though it had been typed in response to the prompt.","ref":"ExCLS.html#c:command/2","title":"ExCLS.command/2","type":"callback"},{"doc":"Initialization function.","ref":"ExCLS.html#c:init/0","title":"ExCLS.init/0","type":"callback"},{"doc":"Intro banner. A string to issue as an intro or banner.","ref":"ExCLS.html#c:intro/0","title":"ExCLS.intro/0","type":"callback"},{"doc":"Prompt function. The prompt issued to solicit input.","ref":"ExCLS.html#c:prompt/1","title":"ExCLS.prompt/1","type":"callback"},{"doc":"See ExCLS.Shell.run/2 .","ref":"ExCLS.html#run/2","title":"ExCLS.run/2","type":"function"},{"doc":"Behaviour state.","ref":"ExCLS.html#t:state/0","title":"ExCLS.state/0","type":"type"},{"doc":"Behaviour module.","ref":"ExCLS.html#t:t/0","title":"ExCLS.t/0","type":"type"},{"doc":"Helper to implement a classic command+args ExCLS.autocomplete/3 callback.","ref":"ExCLS.Autocomplete.html","title":"ExCLS.Autocomplete","type":"module"},{"doc":"","ref":"ExCLS.Autocomplete.html#scan/3","title":"ExCLS.Autocomplete.scan/3","type":"function"},{"doc":"Command + [args] definitions. %{ &quot;ls&quot; =&gt; [ &quot;--verbose&quot; , &quot;--all&quot; ] , &quot;rm&quot; =&gt; [ &quot;--force&quot; , &quot;--recursive&quot; , &quot;-f&quot; , &quot;-r&quot; ] }","ref":"ExCLS.Autocomplete.html#t:cmd_opts/0","title":"ExCLS.Autocomplete.cmd_opts/0","type":"type"},{"doc":"","ref":"ExCLS.Autocomplete.html#t:scan_res/0","title":"ExCLS.Autocomplete.scan_res/0","type":"type"},{"doc":"Shell runner.","ref":"ExCLS.Shell.html","title":"ExCLS.Shell","type":"module"},{"doc":"","ref":"ExCLS.Shell.html#run/2","title":"ExCLS.Shell.run/2","type":"function"},{"doc":"","ref":"ExCLS.Shell.html#t:opts/0","title":"ExCLS.Shell.opts/0","type":"type"},{"doc":"Elixir Command Line Shell - a simple framework for writing line-oriented command interpreters.","ref":"readme.html","title":"ExCLS","type":"extras"},{"doc":"Escript: def project do [ app : :mycli , deps : [ { :excls , github : &quot;visciang/excls&quot; , tag : &quot;xxx&quot; } ] , escript : [ emu_args : &quot;-noinput&quot; ] ] end Elixir script: #!/usr/bin/env -S elixir --erl -noinput Mix . install ( [ { :excls , github : &quot;visciang/excls&quot; , tag : &quot;xxx&quot; } ] )","ref":"readme.html#usage","title":"ExCLS - Usage","type":"extras"},{"doc":"See demo.exs .","ref":"readme.html#demo-app","title":"ExCLS - Demo app","type":"extras"},{"doc":"Statefull prompt History support (via up/down key) Autocomplete (via custom callback or ExCLS.Autocomplete helper)","ref":"readme.html#feature","title":"ExCLS - Feature","type":"extras"}]